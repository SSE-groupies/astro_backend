version: '3.8'

services:
  fastapi_backend:
    image: ${DOCKER_REGISTRY}/stars_backend:${IMAGE_TAG:-latest}
    build: 
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - ENVIRONMENT=production
    container_name: stars_backend_prod
    expose:
      - "8080"
    command: uvicorn src.database_service:app --host 0.0.0.0 --port 8080 --workers 4 --no-access-log
    env_file:
      - ../.env
      - ../config/.env.docker
    environment:
      - ENVIRONMENT=production
      - FASTAPI_RELOAD=false
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    depends_on:
      - redis
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    container_name: stars_redis_prod
    expose:
      - "6379"
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme} --maxmemory 1gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-changeme}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1.5G

  nginx:
    image: nginx:alpine
    container_name: stars_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - fastapi_backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  redis_data_prod:
    driver: local

networks:
  default:
    name: stars_network_prod
    driver: bridge 